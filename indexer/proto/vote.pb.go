// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: proto/vote.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Voting messages
type VoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Slot          uint64                 `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	BlockHash     []byte                 `protobuf:"bytes,2,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	VoterId       string                 `protobuf:"bytes,3,opt,name=voter_id,json=voterId,proto3" json:"voter_id,omitempty"`
	Signature     []byte                 `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoteRequest) Reset() {
	*x = VoteRequest{}
	mi := &file_proto_vote_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteRequest) ProtoMessage() {}

func (x *VoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vote_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteRequest.ProtoReflect.Descriptor instead.
func (*VoteRequest) Descriptor() ([]byte, []int) {
	return file_proto_vote_proto_rawDescGZIP(), []int{0}
}

func (x *VoteRequest) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *VoteRequest) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *VoteRequest) GetVoterId() string {
	if x != nil {
		return x.VoterId
	}
	return ""
}

func (x *VoteRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type VoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoteResponse) Reset() {
	*x = VoteResponse{}
	mi := &file_proto_vote_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteResponse) ProtoMessage() {}

func (x *VoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vote_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteResponse.ProtoReflect.Descriptor instead.
func (*VoteResponse) Descriptor() ([]byte, []int) {
	return file_proto_vote_proto_rawDescGZIP(), []int{1}
}

func (x *VoteResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *VoteResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_proto_vote_proto protoreflect.FileDescriptor

const file_proto_vote_proto_rawDesc = "" +
	"\n" +
	"\x10proto/vote.proto\x12\x03mmn\"y\n" +
	"\vVoteRequest\x12\x12\n" +
	"\x04slot\x18\x01 \x01(\x04R\x04slot\x12\x1d\n" +
	"\n" +
	"block_hash\x18\x02 \x01(\fR\tblockHash\x12\x19\n" +
	"\bvoter_id\x18\x03 \x01(\tR\avoterId\x12\x1c\n" +
	"\tsignature\x18\x04 \x01(\fR\tsignature\"4\n" +
	"\fVoteResponse\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error2:\n" +
	"\vVoteService\x12+\n" +
	"\x04Vote\x12\x10.mmn.VoteRequest\x1a\x11.mmn.VoteResponseB\x11Z\x0fmmn/proto;protob\x06proto3"

var (
	file_proto_vote_proto_rawDescOnce sync.Once
	file_proto_vote_proto_rawDescData []byte
)

func file_proto_vote_proto_rawDescGZIP() []byte {
	file_proto_vote_proto_rawDescOnce.Do(func() {
		file_proto_vote_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_vote_proto_rawDesc), len(file_proto_vote_proto_rawDesc)))
	})
	return file_proto_vote_proto_rawDescData
}

var file_proto_vote_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_vote_proto_goTypes = []any{
	(*VoteRequest)(nil),  // 0: mmn.VoteRequest
	(*VoteResponse)(nil), // 1: mmn.VoteResponse
}
var file_proto_vote_proto_depIdxs = []int32{
	0, // 0: mmn.VoteService.Vote:input_type -> mmn.VoteRequest
	1, // 1: mmn.VoteService.Vote:output_type -> mmn.VoteResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_vote_proto_init() }
func file_proto_vote_proto_init() {
	if File_proto_vote_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_vote_proto_rawDesc), len(file_proto_vote_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_vote_proto_goTypes,
		DependencyIndexes: file_proto_vote_proto_depIdxs,
		MessageInfos:      file_proto_vote_proto_msgTypes,
	}.Build()
	File_proto_vote_proto = out.File
	file_proto_vote_proto_goTypes = nil
	file_proto_vote_proto_depIdxs = nil
}
